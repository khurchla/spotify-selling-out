knitr::opts_chunk$set(
echo = F,
warning = F,
message = F,
include = T,
cache = F,
fig.width = 6,
fig.height = 4,
out.width = "100%",
out.height = "100%"
)
knitr::clean_cache(
clean = FALSE,
path = knitr::opts_chunk$get("cache.path")
)
library(tidyverse)
library(lubridate)
library(sf)
library(leaflet)
library(ggiteam)
library(kableExtra)
library(htmltools)
library(DT)
df <- read_csv("data/data/track_features/tf_mini.csv")
head(df)
View(df)
track_features <- read_csv("data/data/track_features/tf_mini.csv")
track_features <- read_csv("data/data/track_features/tf_mini.csv")
track_features <- read_csv("../data/data/track_features/tf_mini.csv")
skips <- read_csv("../data/training_set/log_mini.csv")
skips <- read_csv("../data/data/training_set/log_mini.csv")
View(skips)
full <- skips %>% left_join(track_features, by = c("track_id_clean" = "track_id"))
View(full)
remove(df)
---
title: How to Sell Out
subtitle: ""
author: <a href=mailto:justin.elszasz@baltimorecity.gov>justin.elszasz@baltimorecity.gov</a>
date: "`r format(Sys.time(), '%B %d, %Y')`"
output:
html_notebook:
code_folding: hide
fig_height: 4
fig_width: 6
toc: yes
toc_depth: 2
toc_float: true
editor_options:
chunk_output_type: inline
---
<style>
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap');
</style>
```{css, echo=FALSE}
* {
font-family: 'Roboto', sans-serif;
}
h1, .h1  {
margin-top: 70px;
}
```
<img src=`r "https://images.squarespace-cdn.com/content/5b32397bf79392af6b062048/1578532761811-Y6J7YANV433GI2O8YPXV/OPI_Logo.png?content-type=image%2Fpng"` width="200">
```{r setup, include = FALSE, echo = FALSE, message = FALSE, cache = FALSE}
knitr::opts_chunk$set(
echo = F,
warning = F,
message = F,
include = T,
cache = F,
fig.width = 6,
fig.height = 4,
out.width = "100%",
out.height = "100%"
)
knitr::clean_cache(
clean = FALSE,
path = knitr::opts_chunk$get("cache.path")
)
```
```{r load_packages}
library(tidyverse)
library(lubridate)
library(sf)
library(leaflet)
library(ggiteam)
library(kableExtra)
library(htmltools)
library(DT)
```
# Here is my first notebook
```{r}
track_features <- read_csv("../data/data/track_features/tf_mini.csv")
skips <- read_csv("../data/data/training_set/log_mini.csv")
```
```{r}
# counts
skips %>%
count(track_id_clean) %>%
arrange(desc(n))
```
```{r}
track_plays_and_skips <- skips %>%
group_by(track_id_clean) %>%
summarise(
plays = n(),
skip_1 = sum(skip_1),
skip_2 = sum(skip_2),
skip_3 = sum(skip_3),
not_skipped = sum(not_skipped)
) %>%
filter(plays >= 50) %>%
mutate(not_skipped_pct= not_skipped / plays)
```
```{r}
track_plays_skips_features <- track_plays_and_skips %>%
left_join(track_features, by = c("track_id_clean" = "track_id"))
```
```{r}
track_plays_skips_features %>%
ggplot(aes(x = energy, y = not_skipped_pct)) +
geom_point()
```
```{r plot.width = 3, out.width= "100%"}
track_plays_skips_features %>%
select(
not_skipped_pct,
energy,
bounciness,
beat_strength,
danceability,
flatness,
instrumentalness
) %>%
gather(key = metric_name, value = metric, -not_skipped_pct) %>%
ggplot(aes(x = metric, y = not_skipped_pct)) +
geom_point() +
facet_wrap(~metric_name)
```
```{r}
```
```{r}
sessionInfo()
```
knitr::opts_chunk$set(
echo = F,
warning = F,
message = F,
include = T,
cache = F,
fig.width = 6,
fig.height = 4,
out.width = "100%",
out.height = "100%"
)
knitr::clean_cache(
clean = FALSE,
path = knitr::opts_chunk$get("cache.path")
)
library(tidyverse)
library(lubridate)
library(sf)
library(leaflet)
library(ggiteam)
library(kableExtra)
library(htmltools)
library(DT)
track_features <- read_csv("../data/data/track_features/tf_mini.csv")
skips <- read_csv("../data/data/training_set/log_mini.csv")
# counts
skips %>%
count(track_id_clean) %>%
arrange(desc(n))
track_plays_and_skips <- skips %>%
group_by(track_id_clean) %>%
summarise(
plays = n(),
skip_1 = sum(skip_1),
skip_2 = sum(skip_2),
skip_3 = sum(skip_3),
not_skipped = sum(not_skipped)
) %>%
filter(plays >= 50) %>%
mutate(not_skipped_pct= not_skipped / plays)
track_plays_skips_features <- track_plays_and_skips %>%
left_join(track_features, by = c("track_id_clean" = "track_id"))
track_plays_skips_features %>%
ggplot(aes(x = energy, y = not_skipped_pct)) +
geom_point()
track_plays_skips_features %>%
select(
not_skipped_pct,
energy,
bounciness,
beat_strength,
danceability,
flatness,
instrumentalness
) %>%
gather(key = metric_name, value = metric, -not_skipped_pct) %>%
ggplot(aes(x = metric, y = not_skipped_pct)) +
geom_point() +
facet_wrap(~metric_name)
sessionInfo()
install.packages(ggiteam)
track_features <- read_csv("../data/data/track_features/tf_mini.csv")
skips <- read_csv("../data/data/training_set/log_mini.csv")
track_features <- read_csv("../data/raw/track_features/tf_mini.csv")
skips <- read_csv("../data/raw/training_set/log_mini.csv")
install.packages("remotes")
remotes::install_github("city-of-baltimore/ggiteam")
